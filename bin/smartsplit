#!/bin/sh
# Window splitting script for bspwm. Requires wmutils and xdotool. Splits window in its biggest dimension
# in the direction that is closer to the cursor. Inspired by MouseLaunch and pseudo_automatic_rule.
# Get the necessary info

eval $(xdotool getmouselocation --shell)
IFS=" " read -a window <<< $(wattr whxy $(bspc query -W -w focused))

# Distance to each side
up=$(( $Y - ${window[3]}))
down=$(( ${window[3]} + ${window[1]} - $Y ))
left=$(( $X - ${window[2]}))
right=$(( ${window[2]} + ${window[0]} - $X ))
# Dimensions of window
widht=${window[0]}
height=${window[1]}

# Determine which window edge in biggest dimension is closer
  if [[ "$widht" -lt "$height" ]] && [[ "$up" -lt "$down" ]]; then
    dir_final=up
  elif [[ "$widht" -lt "$height" ]] && [[ "$up" -ge "$down" ]]; then
    dir_final=down
  elif [[ "$widht" -ge "$height" ]] && [[ "$left" -lt "$right" ]]; then
    dir_final=left  
  else
    dir_final=right
  fi
  
# Split the window accordingly
bspc window -p cancel # Necessary if you have set auto_cancel to true
bspc window -p $dir_final
